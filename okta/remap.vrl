.ocsf.metadata.version = "1.3.0"
.ocsf.metadata.product.vendor_name = "Okta"
.ocsf.metadata.product.name = "Okta System Log"

.ocsf.category_uid = 3
.ocsf.category_name = "Identity & Access Management"
.ocsf.class_uid = 3002
.ocsf.class_name = "Authentication"

.ocsf.time = to_unix_timestamp(parse_timestamp!(del(.message.published), format: "%+"))

if (!is_null(.message.eventType)) {
  .ocsf.type_uid = 300201
  .ocsf.type_name = "Authentication Audit: Logon"
}

activity = del(.message.eventType)

if (!is_null(activity)) {
    if (contains(string!(activity), "user.authentication")) {
        .ocsf.activity_id = 1
        .ocsf.activity_name = "Logon"
    } else {
        .ocsf.activity_name = activity
        .ocsf.activity_id = 99
    }
}

.ocsf.auth_protocol = del(.message.authenticationContext.authenticationProvider)

if (is_null(.ocsf.auth_protocol)) {
    .ocsf.auth_protocol = del(.message.debugContext.debugData.signOnMode)
}

if (is_null(.ocsf.auth_protocol)) {
    .ocsf.auth_protocol = "Unknown"
    .ocsf.auth_protocol_id = 0
} else if ( .ocsf.auth_protocol == "FTP" || .ocsf.auth_protocol == "TELNET" ) {
    .ocsf.auth_protocol_id = 0
    .ocsf.is_cleartext = true
} else if (.ocsf.auth_protocol == "SAML 2.0") {
    .ocsf.auth_protocol = "SAML"
    .ocsf.auth_protocol_id = 5
    .ocsf.is_cleartext = false
} else if (contains(string!(.ocsf.auth_protocol), "FACTOR")) {
    .ocsf.auth_protocol = "Other / MFA"
    .ocsf.auth_protocol_id = 99
    .ocsf.is_cleartext = false
} else {
    .ocsf.auth_protocol_id = 0
}

.ocsf.enrichments = [{}]
.ocsf.enrichments[0].name = "geographicalContext"
.ocsf.enrichments[0].data = encode_json(del(.message.client.geographicalContext))
.ocsf.enrichments[0].value = del(.message.client.ipAddress)
.ocsf.enrichments[0].type = "location"

.ocsf.logon_type = del(.message.transaction.type)

if (.ocsf.logon_type == "WEB") {
    .ocsf.logon_type_id = 99
}
.ocsf.message = del(.message.displayMessage)

.ocsf.session.uid = del(.message.authenticationContext.externalSessionId)

.ocsf.severity = del(.message.severity)

if (.ocsf.severity == "INFO") {
    .ocsf.severity_id = 1
} else if (!is_null(.ocsf.severity)) {
    .ocsf.severity_id = 0
}

.ocsf.src_endpoint.ip = del(.message.client.ipAddress)
.ocsf.src_endpoint.interface_id = del(.message.client.id) || del(.message.client.device)

.ocsf.dst_endpoint.hostname = del(.message.debugContext.debugData.issuer) || del(.message.debugContext.debugData.redirectUri)
.ocsf.dst_endpoint.svc_name = del(.message.debugContext.debugData.url)

.ocsf.user.uid = del(.message.actor.id)
.ocsf.user.type = del(.message.actor.type)
.ocsf.user.name = del(.message.actor.displayName)
.ocsf.user.email_addr = .message.ocsf.dst_user = del(.message.actor.alternateId)

.ocsf.status = del(.message.outcome.result)
.ocsf.status_code = "N/A"
.ocsf.status_id = 0

if (.ocsf.status == "SUCCESS") {
    .ocsf.status = "Success"
    .ocsf.status_detail = activity || "LOGON_USER_INITIATED"
    .ocsf.status_id = 1
}

.ocsf.unmapped = encode_json(compact(.message, string: true, array: true, null: true, nullish: true))
. = compact(.ocsf, string: true, array: true, null: true, nullish: true)
